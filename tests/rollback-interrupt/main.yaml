---
# vim: set ft=ansible:
#
# This playbook tests the ability to interrupt a rollback operation without
# any negative impact to the system.
#
# The interrupt ability is tested via the included bash script
# ('atomic_rollback_interrupt.sh').  Please see the script for implementation
# details.
#
# By default, the script tries to interrupt the rollback operation once, but
# any number of interrupts can be attempted by supplying a different value
# to the 'iterations' variable.
#
# The playbook requires the following variable set:
#   - datadir
#
# See the 'vars/smoketest_vars.yaml' for example values.
#
# Because the playbook attempts to register the system with
# 'subscription-manager' if it is a RHEL system, it expects to have the
# variables in 'vars/subscription.yaml' defined.
#
- name: Atomic Host interrupt rollback test
  hosts: all
  sudo: yes

  vars_files:
    - ../../vars/smoketest_vars.yaml
    - ../../vars/subscription.yaml

  tasks:
    - name: Check if system is an Atomic Host
      include: ../../common/atomic.yaml

    - name: Register using subscription-manager
      include: ../../rhel/subscribe.yaml
      when: ansible_distribution == "RedHat"

    - name: Setup data directory
      include: ../../common/data_dir.yaml

    - name: Copy rollback_interrupt script to host
      copy:
        dest: "{{ datadir }}/atomic_rollback_interrupt.sh"
        mode: 0744
        src: ../../common/scripts/atomic_rollback_interrupt.sh

    - name: Upgrade to latest tree
      command: rpm-ostree upgrade

    - name: Reboot into new tree
      include: ../../common/ans_reboot.yaml

    - name: Get deployment in first position
      shell: rpm-ostree status | awk 'FNR == 2 {print $4}'
      register: f

    - set_fact: original_version="{{ f.stdout }}"

    - name: Get deployment in second position
      shell: rpm-ostree status | awk 'FNR == 3 {print $3}'
      register: s

    - set_fact: secondary_version="{{ s.stdout }}"

    - name: Run the rollback_interrupt script
      command: "{{ datadir }}/atomic_rollback_interrupt.sh {{ iterations | default('1') }}"

    - name: Verify that the first deployment has NOT changed
      include: ../../common/compare_version.yaml expected_version="{{ original_version }}"

    - name: Complete the rollback
      command: rpm-ostree rollback

    - name: Verify that the first deployment HAS changed
      include: ../../common/compare_version.yaml expected_version="{{ secondary_version }}"

    - name: Remove all registrations using subscription-manager
      include: ../../rhel/unsubscribe.yaml
      when: ansible_distribution == "RedHat"
